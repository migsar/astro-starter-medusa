---
const strings = {
  profileLabel: 'Profile',
  logoutLabel: 'Log Out',
  buttonLabel: 'Log In',
};

const classes = {
  inputField: 'input input-bordered w-full mb-4',
};
---

<user-control>
  <div class="dropdown dropdown-end hidden">
    <label tabindex="0" class="btn btn-ghost btn-circle avatar">
      <div class="w-10 rounded-full bg-slate-300">
        <!-- <img src="/images/stock/photo-1534528741775-53994a69daeb.jpg" /> -->
      </div>
    </label>
    <ul
      tabindex="0"
      class="menu menu-compact dropdown-content mt-3 p-2 shadow bg-base-100 rounded-box w-52"
    >
      <li><a>{strings.profileLabel}</a></li>
      <li>
        <button class="btn btn-secondary logout-action" type="button"
          >{strings.logoutLabel}</button
        >
      </li>
    </ul>
  </div>
  <div class="login">
    <a href="/log-in">
      <button class="hidden btn btn-primary" type="button"
        >{strings.buttonLabel}</button
      >
    </a>
  </div>
</user-control>

<script>
  // Define the behaviour for our new type of HTML element.
  class UserControl extends HTMLElement {
    user = null;

    constructor() {
      super();

      this.init();
    }

    async init() {
      const res = await fetch('http://localhost:9000/store/auth', {
        method: 'GET',
        credentials: 'include',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      if (res.status < 200 || res.status >= 300) {
        this.loginButtonElement.classList.remove('hidden');
      } else {
        this.dropdownRootElement.classList.remove('hidden');
        this.logoutButtonElement.addEventListener('click', async () => {
          const res = await fetch('http://localhost:9000/store/auth', {
            method: 'DELETE',
            credentials: 'include',
            headers: {
              'Content-Type': 'application/json',
            },
          });

          if (res.status === 200) {
            window.location.href = '/';
          }
        });
      }
    }

    get loginButtonElement() {
      return this.querySelector('.login button') as HTMLButtonElement;
    }

    get logoutButtonElement() {
      return this.querySelector('.logout-action') as HTMLButtonElement;
    }

    get dropdownRootElement() {
      return this.querySelector('.dropdown') as HTMLDivElement;
    }
  }

  customElements.define('user-control', UserControl);
</script>
